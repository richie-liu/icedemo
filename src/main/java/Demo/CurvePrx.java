// **********************************************************************
//
// Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.2
//
// <auto-generated>
//
// Generated from file `Curve.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package Demo;

public interface CurvePrx extends Ice.ObjectPrx
{
    public void sayCurve(int delay);

    public void sayCurve(int delay, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_sayCurve(int delay);

    public Ice.AsyncResult begin_sayCurve(int delay, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_sayCurve(int delay, Ice.Callback __cb);

    public Ice.AsyncResult begin_sayCurve(int delay, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_sayCurve(int delay, Callback_Curve_sayCurve __cb);

    public Ice.AsyncResult begin_sayCurve(int delay, java.util.Map<String, String> __ctx, Callback_Curve_sayCurve __cb);

    public Ice.AsyncResult begin_sayCurve(int delay, 
                                          IceInternal.Functional_VoidCallback __responseCb, 
                                          IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_sayCurve(int delay, 
                                          IceInternal.Functional_VoidCallback __responseCb, 
                                          IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                          IceInternal.Functional_BoolCallback __sentCb);

    public Ice.AsyncResult begin_sayCurve(int delay, 
                                          java.util.Map<String, String> __ctx, 
                                          IceInternal.Functional_VoidCallback __responseCb, 
                                          IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_sayCurve(int delay, 
                                          java.util.Map<String, String> __ctx, 
                                          IceInternal.Functional_VoidCallback __responseCb, 
                                          IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                          IceInternal.Functional_BoolCallback __sentCb);

    public void end_sayCurve(Ice.AsyncResult __result);

    public float getDiscount(int date);

    public float getDiscount(int date, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getDiscount(int date);

    public Ice.AsyncResult begin_getDiscount(int date, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getDiscount(int date, Ice.Callback __cb);

    public Ice.AsyncResult begin_getDiscount(int date, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getDiscount(int date, Callback_Curve_getDiscount __cb);

    public Ice.AsyncResult begin_getDiscount(int date, java.util.Map<String, String> __ctx, Callback_Curve_getDiscount __cb);

    public Ice.AsyncResult begin_getDiscount(int date, 
                                             IceInternal.Functional_FloatCallback __responseCb, 
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_getDiscount(int date, 
                                             IceInternal.Functional_FloatCallback __responseCb, 
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                             IceInternal.Functional_BoolCallback __sentCb);

    public Ice.AsyncResult begin_getDiscount(int date, 
                                             java.util.Map<String, String> __ctx, 
                                             IceInternal.Functional_FloatCallback __responseCb, 
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_getDiscount(int date, 
                                             java.util.Map<String, String> __ctx, 
                                             IceInternal.Functional_FloatCallback __responseCb, 
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                             IceInternal.Functional_BoolCallback __sentCb);

    public float end_getDiscount(Ice.AsyncResult __result);

    public String[] getPillars();

    public String[] getPillars(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getPillars();

    public Ice.AsyncResult begin_getPillars(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getPillars(Ice.Callback __cb);

    public Ice.AsyncResult begin_getPillars(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getPillars(Callback_Curve_getPillars __cb);

    public Ice.AsyncResult begin_getPillars(java.util.Map<String, String> __ctx, Callback_Curve_getPillars __cb);

    public Ice.AsyncResult begin_getPillars(IceInternal.Functional_GenericCallback1<String[]> __responseCb, 
                                            IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_getPillars(IceInternal.Functional_GenericCallback1<String[]> __responseCb, 
                                            IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                            IceInternal.Functional_BoolCallback __sentCb);

    public Ice.AsyncResult begin_getPillars(java.util.Map<String, String> __ctx, 
                                            IceInternal.Functional_GenericCallback1<String[]> __responseCb, 
                                            IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_getPillars(java.util.Map<String, String> __ctx, 
                                            IceInternal.Functional_GenericCallback1<String[]> __responseCb, 
                                            IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                            IceInternal.Functional_BoolCallback __sentCb);

    public String[] end_getPillars(Ice.AsyncResult __result);

    public void shutdown();

    public void shutdown(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_shutdown();

    public Ice.AsyncResult begin_shutdown(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_shutdown(Ice.Callback __cb);

    public Ice.AsyncResult begin_shutdown(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_shutdown(Callback_Curve_shutdown __cb);

    public Ice.AsyncResult begin_shutdown(java.util.Map<String, String> __ctx, Callback_Curve_shutdown __cb);

    public Ice.AsyncResult begin_shutdown(IceInternal.Functional_VoidCallback __responseCb, 
                                          IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_shutdown(IceInternal.Functional_VoidCallback __responseCb, 
                                          IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                          IceInternal.Functional_BoolCallback __sentCb);

    public Ice.AsyncResult begin_shutdown(java.util.Map<String, String> __ctx, 
                                          IceInternal.Functional_VoidCallback __responseCb, 
                                          IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_shutdown(java.util.Map<String, String> __ctx, 
                                          IceInternal.Functional_VoidCallback __responseCb, 
                                          IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                          IceInternal.Functional_BoolCallback __sentCb);

    public void end_shutdown(Ice.AsyncResult __result);
}
